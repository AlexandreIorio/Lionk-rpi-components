@using Lionk.Core.Component
@using Lionk.Core.Component.Dialog
@using Lionk.Core.View
@using MudBlazor
@namespace Lionk.TemperatureSensor
@attribute [ViewOfAttribute("DS18B20 Configuration", typeof(DS18B20), typeof(DS18B20Config), ViewContext.Configuration)]

<MudTextField @bind-Value="_component.InstanceName" Label="Name" />
<MudTextField @bind-Value="seconds" Label="Update frequency in s" T="int"/>

<MudSelect @bind-Value="_component.Address" Label="Bus Address">
    @foreach (var address in DS18B20.ConnectedSensors())
    {
        <MudSelectItem Value="@address">@address</MudSelectItem>
    }
</MudSelect>

<MudRadioGroup @bind-Value="_component.TemperatureType">
    @foreach (TemperatureType type in Enum.GetValues(typeof(TemperatureType)))
    {
        <MudRadio Value="@type">@type.GetUnit()</MudRadio>
    }
</MudRadioGroup>

@code {
    [Parameter] public DS18B20? Component { get; set; }
    private DS18B20 _component = new();
    private int seconds { get => _component.ExecutionFrequency.Seconds; set => _component.ExecutionFrequency = TimeSpan.FromSeconds(value); }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ArgumentNullException.ThrowIfNull(Component);
        _component = Component;
    }
}
