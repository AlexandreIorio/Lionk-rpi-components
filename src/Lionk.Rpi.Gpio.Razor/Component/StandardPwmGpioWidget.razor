@namespace Lionk.Rpi.Gpio.View
@using Lionk.Core.View
@using Lionk.Rpi.Gpio
@using MudBlazor
@using System.ComponentModel
@attribute [ViewOfAttribute("Pwm Gpio View", typeof(StandardPwmGpio), typeof(StandardPwmGpioWidget), ViewContext.Widget)]

<PwmSignalDisplayer Component="Component" />
<MudText>Frequency [Hz] @Component.Frequency </MudText>
<MudChip T="string" Color="@_isActiveColor">@_isActiveText</MudChip>

@code {
    [Parameter] public StandardPwmGpio Component { get; set; } = null!;

    private string _isActiveText => Component.Pin is Rpi4Gpio.None ? "No Gpio Selected" : Component.PwmOn ? "Active" : "Inactive";
    private Color _isActiveColor => Component.Pin is Rpi4Gpio.None ? Color.Warning : Component.PwmOn ? Color.Success : Color.Default;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Component == null) throw new ArgumentNullException(nameof(Component));
        Component.PropertyChanged += Changed;
    }

    private void Changed(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }
}
